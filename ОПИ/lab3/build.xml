<?xml version="1.0" encoding="UTF-8"?>
<project name="Lab3" default="build">

    <property file="build.properties"/>
    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="lib/main/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>
    <path id="lib.main.dir">
        <fileset dir="lib" includes="ant-contrib-1.0b3.jar"/>
    </path>

    <path id="lib.main.path">
        <fileset dir="${lib.main.dir}" includes="**/*.jar"/>
    </path>

    <path id="lib.test.path">
        <path refid="lib.main.path"/>
        <fileset dir="${lib.test.dir}" includes="**/*.jar"/>
    </path>


    <!-- ✅ -->
    <!-- 1: компиляция исходного кода -->
    <target name="compile" description="Компиляция кода проекта">
        <echo>Compile_main</echo>
        <property name="srcdir" value="${src.main.dir}"/>
        <mkdir dir="${build.classes.dir}"/>
        <javac srcdir="${srcdir}"
               destdir="${build.classes.dir}"
               includeantruntime="false">
            <classpath refid="lib.main.path"/>
        </javac>
        <echo>Compile_Test</echo>
        <mkdir dir="${test.dir}"/>
        <javac srcdir="${src.test.dir}"
               destdir="${test.dir}"
               includeantruntime="false">
            <classpath>
                <path refid="lib.test.path"/>
                <pathelement location="${build.classes.dir}"/>
            </classpath>
        </javac>
    </target>

    <target name="cleanWar" description="Удаление старого WAR файла">
        <delete file="${build.dir}/${ant.project.name}.war"/>
    </target>


    <!-- ✅ -->
    <!-- 2: сборка проекта -->
    <target name="build" depends="compile,cleanWar" description="Создание war-файла">
        <echo>Compile_lib</echo>
        <copy todir="${build.web-inf.lib}">
            <path refid="lib.main.path"/>
        </copy>

        <echo>Compile_all_WEB-INF</echo>
        <copy todir="${build.web-inf}">
            <fileset dir="${src.main.web}/WEB-INF"/>
        </copy>

        <echo>Compile_resources</echo>
        <copy todir="${build.classes.dir}">
            <fileset dir="${src.main.resources}"/>
        </copy>

        <echo>Copy_files_in_war</echo>
        <copy todir="${build.dir}">
            <fileset dir="${src.main.web}">
                <exclude name="WEB-INF/**"/>
            </fileset>
        </copy>

        <echo>Create_war</echo>
        <property name="war" value="${build.dir}/${ant.project.name}.war"/>
        <war destfile="${war}" update="true">
            <fileset dir="${build.dir}"/>
        </war>
    </target>


    <!-- ✅ -->
    <!-- 3: очистка удаление скомпилированных классов -->
    <target name="clean" description="Удаление скомпилированных файлов">
        <echo>Delete_dir_classes</echo>
        <delete dir="${build.dir}"/>
        <echo>Delete_dir_tests</echo>
        <delete dir="${test.dir}"/>
        <echo>Delete_dir_doc</echo>
        <delete dir="${doc.dir}"/>
        <echo>Delete_resources</echo>
        <delete dir="${native2ascii.resources}"/>
    </target>


    <!-- NO -->
    <!-- 4: запуск junit-тестов проекта -->
    <target name="test" depends="build" description="Компиляция и выполнение тестов">
        <echo>Create_dir_for_test</echo>
        <mkdir dir="${test.report.dir}"/>
        <echo>Run_test</echo>
        
        <junitlauncher printsummary="true" haltonfailure="true">
            <classpath>
                <path refid="lib.test.path"/>
                <pathelement location="${build.dir}"/>
                <pathelement location="${build.classes.dir}"/>
                <pathelement location="${test.dir}"/>
                <pathelement location="/home/andrey/Документы/itmo_labs/ОПИ/lab3/lib/test/junitlauncher.jar"/>
            </classpath> <!-- Убедитесь, что здесь закрывающий тег присутствует -->

            <testclasses outputdir="${test.report.dir}">
                <fileset dir="${test.dir}">
                    <include name="**/*Test*.class"/>
                </fileset>
                <listener type="legacy-plain"
                          sendSysOut="true"
                          sendSysErr="true"/>
                <fork/>
            </testclasses>
        </junitlauncher>

    </target>


    <!-- 5: перемещение собранного проекта по scp по завершению сборки -->
    <target name="scp" depends="build" description="Сборка и перемещение собранного war-архива по scp на сервер">
        <input message="Введите пароль: " addproperty="scp.password">
            <handler type="secure"/>
        </input>
        <trycatch>
            <try>
                <echo>Connecting and sending a war archive to the server...</echo>
                <echo>${scp.user}@${scp.host}:${scp.dir}</echo>
                <scp file="${build.dir}/${ant.project.name}.war"
                     todir="${scp.user}@${scp.host}:${scp.dir}"
                     password="${scp.password}"
                     port="${scp.port}"
                     trust="true"/>
            </try>
            <catch>
                <fail message="Failed to connect to the server."/>
            </catch>
        </trycatch>
    </target>


    <!-- NO -->
    <!-- 9: музыка после сборки -->
    <target name="music" depends="build">
        <sound>
            <success source="sounds/goblin.wav"/>
            <fail source="sounds/laugh.wav" loops="2"/>
        </sound>
    </target>


    <!-- ✅ -->
    <!-- 10: alt создаёт альтернативную версию программы-->
    <target name="alt" description="Создание версии программы с измененными именами переменных и классов по указанному регулярному выражению">
        <echo>Создание временной директории и копирование исходных файлов...</echo>
        <tempfile property="temp.dir" destdir="${java.io.tmpdir}" prefix="ant"/>
        <copy todir="${temp.dir}">
            <fileset dir="${src.main.dir}" includes="**/*.java"/>
        </copy>

        <echo>Change names...</echo>
        <replaceregexp match="${alt.regex}"
                       flags="${alt.regex.flags}"
                       replace="${alt.replace}">
            <fileset dir="${temp.dir}" includes="**/*.java"/>
        </replaceregexp>

        <echo>Buld war...</echo>
        <antcall target="build">
            <param name="srcdir" value="${temp.dir}"/>
            <param name="war" value="${build.dir}/АБОБА.war"/>
        </antcall>
    </target>


    <!-- 11: diff -->
    <target name="diff" description="Совершение коммита в репозиторий svn, если изменения не касаются указанных классов">
        <echo>Получение списка измененных файлов...</echo>
        <svn-status outputproperty="diff.status"/>
        <echo>Поиск изменений в указанных классах...</echo>
        <for param="class" list="${diff.classes}" delimiter=" ">
            <sequential>
                <condition property="commit">
                    <not>
                        <contains string="${diff.status}"
                          substring="@{class}.java"/>
                      </not>
                  </condition>
              </sequential>
          </for>
          <if>
            <isset property="commit"/>
            <then>
                <echo>Изменения не были найдены: выполнение коммита...</echo>
                <svn-commit/>
            </then>
            <else>
                <echo>Изменения были найдены: завершение...</echo>
            </else>
        </if>
    </target>

</project>